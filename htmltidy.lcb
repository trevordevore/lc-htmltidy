library community.livecode.trevordevor.htmltidy

  use com.livecode.engine
  use com.livecode.foreign

  metadata title is "HTML Tidy"
  metadata author is "Trevor DeVore"
  metadata version is "0.0.1"

  public type TidyDoc is Pointer
  -- ctmbstr: https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L607
  public type Ctmbstr is Pointer
  -- tmbstr: https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L607
  public type Tmbchar is Pointer

  constant ENOMEM is -12
  constant kMCStringEncodingUTF8 is 4

  constant kOptions is { \
    "TidyUnknownOption" : 0, \
    "TidyAccessibilityCheckLevel" : 1, \
    "TidyAltText" : 2, \
    "TidyAnchorAsName" : 3, \
    "TidyAsciiChars" : 4, \
    "TidyBlockTags" : 5, \
    "TidyBodyOnly" : 6, \
    "TidyBreakBeforeBR" : 7, \
    "TidyCharEncoding" : 8, \
    "TidyCoerceEndTags" : 9, \
    "TidyCSSPrefix" : 10, \
    "TidyCustomTags" : 11, \
    "TidyDecorateInferredUL" : 12, \
    "TidyDoctype" : 13, \
    "TidyDoctypeMode" : 14, \
    "TidyDropEmptyElems" : 15, \
    "TidyDropEmptyParas" : 16, \
    "TidyDropPropAttrs" : 17, \
    "TidyDuplicateAttrs" : 18, \
    "TidyEmacs" : 19, \
    "TidyEmacsFile" : 20, \
    "TidyEmptyTags" : 21, \
    "TidyEncloseBlockText" : 22, \
    "TidyEncloseBodyText" : 23, \
    "TidyErrFile" : 24, \
    "TidyEscapeCdata" : 25, \
    "TidyEscapeScripts" : 26, \
    "TidyFixBackslash" : 27, \
    "TidyFixComments" : 28, \
    "TidyFixUri" : 29, \
    "TidyForceOutput" : 30, \
    "TidyGDocClean" : 31, \
    "TidyHideComments" : 32, \
    "TidyHtmlOut" : 33, \
    "TidyInCharEncoding" : 34, \
    "TidyIndentAttributes" : 35, \
    "TidyIndentCdata" : 36, \
    "TidyIndentContent" : 37, \
    "TidyIndentSpaces" : 38, \
    "TidyInlineTags" : 39, \
    "TidyJoinClasses" : 40, \
    "TidyJoinStyles" : 41, \
    "TidyKeepFileTimes" : 42, \
    "TidyKeepTabs" : 43, \
    "TidyLiteralAttribs" : 44, \
    "TidyLogicalEmphasis" : 45, \
    "TidyLowerLiterals" : 46, \
    "TidyMakeBare" : 47, \
    "TidyMakeClean" : 48, \
    "TidyMark" : 49, \
    "TidyMergeDivs" : 50, \
    "TidyMergeEmphasis" : 51, \
    "TidyMergeSpans" : 52, \
    "TidyMetaCharset" : 53, \
    "TidyMuteReports" : 54, \
    "TidyMuteShow" : 55, \
    "TidyNCR" : 56, \
    "TidyNewline" : 57, \
    "TidyNumEntities" : 58, \
    "TidyOmitOptionalTags" : 59, \
    "TidyOutCharEncoding" : 60, \
    "TidyOutFile" : 61, \
    "TidyOutputBOM" : 62, \
    "TidyPPrintTabs" : 63, \
    "TidyPreserveEntities" : 64, \
    "TidyPreTags" : 65, \
    "TidyPriorityAttributes" : 66, \
    "TidyPunctWrap" : 67, \
    "TidyQuiet" : 68, \
    "TidyQuoteAmpersand" : 69, \
    "TidyQuoteMarks" : 70, \
    "TidyQuoteNbsp" : 71, \
    "TidyReplaceColor" : 72, \
    "TidyShowErrors" : 73, \
    "TidyShowFilename" : 74, \
    "TidyShowInfo" : 75, \
    "TidyShowMarkup" : 76, \
    "TidyShowMetaChange" : 77, \
    "TidyShowWarnings" : 78, \
    "TidySkipNested" : 79, \
    "TidySortAttributes" : 80, \
    "TidyStrictTagsAttr" : 81, \
    "TidyStyleTags" : 82, \
    "TidyTabSize" : 83, \
    "TidyUpperCaseAttrs" : 84, \
    "TidyUpperCaseTags" : 85, \
    "TidyUseCustomTags" : 86, \
    "TidyVertSpace" : 87, \
    "TidyWarnPropAttrs" : 88, \
    "TidyWord2000" : 89, \
    "TidyWrapAsp" : 90, \
    "TidyWrapAttVals" : 91, \
    "TidyWrapJste" : 92, \
    "TidyWrapLen" : 93, \
    "TidyWrapPhp" : 94, \
    "TidyWrapScriptlets" : 95, \
    "TidyWrapSection" : 96, \
    "TidyWriteBack" : 97, \
    "TidyXhtmlOut" : 98, \
    "TidyXmlDecl" : 99, \
    "TidyXmlOut" : 100, \
    "TidyXmlPIs" : 101, \
    "TidyXmlSpace" : 102, \
    "TidyXmlTags" : 103 \
  }

  foreign handler MCMemoryAllocate(in pSize as UIntSize, out rBlock as Pointer) returns CBool binds to "<builtin>"
  foreign handler MCMemoryDeallocate(in pBlock as Pointer) returns nothing binds to "<builtin>"
  foreign handler MCStringCreateWithBytes( \
        in pBytes as Pointer, in pByteCount as LCUInt, in pEncoding as CUInt, in pIsExternalRep as CBool, out rString as String\
        ) returns CBool binds to "<builtin>"
  foreign handler MCDataGetBytePtr( in pData as Data ) returns Pointer binds to "<builtin>"
  foreign handler MCStringCreateWithCString(in pString as Pointer, out rString as String) returns CBool binds to "<builtin>"
  foreign handler MCStringConvertToCString(in pString as String, out rCString as Pointer) returns CBool binds to "<builtin>"

  foreign handler c_tidyReleaseDate () \
        returns Ctmbstr binds to "c:libtidy>tidyReleaseDate"

  foreign handler c_tidyLibraryVersion () \
        returns Ctmbstr binds to "c:libtidy>tidyLibraryVersion"

  foreign handler c_tidyPlatform () \
        returns Ctmbstr binds to "c:libtidy>tidyPlatform"

  foreign handler c_tidyCreate () \
        returns TidyDoc binds to "c:libtidy>tidyCreate"

  foreign handler c_tidyRelease (in pDoc as TidyDoc) \
        returns nothing binds to "c:libtidy>tidyRelease"

  foreign handler c_tidyStatus (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyStatus"

  foreign handler c_tidySetCharEncoding (in pDoc as TidyDoc, in pEncoding as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidySetCharEncoding"

  foreign handler c_tidySetInCharEncoding (in pDoc as TidyDoc, in pEncoding as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidySetInCharEncoding"

  foreign handler c_tidySetOutCharEncoding (in pDoc as TidyDoc, in pEncoding as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidySetOutCharEncoding"

  foreign handler c_tidyDetectedHtmlVersion (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyDetectedHtmlVersion"

  foreign handler c_tidyDetectedXhtml (in pDoc as TidyDoc) \
        returns CBool binds to "c:libtidy>tidyDetectedXhtml"

  foreign handler c_tidyDetectedGenericXml (in pDoc as TidyDoc) \
        returns CBool binds to "c:libtidy>tidyDetectedGenericXml"

  foreign handler c_tidyErrorCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyErrorCount"

  foreign handler c_tidyWarningCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyWarningCount"

  foreign handler c_tidyAccessWarningCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyAccessWarningCount"

  foreign handler c_tidyConfigErrorCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyConfigErrorCount"

  foreign handler c_tidyOptGetBool () \
        returns CBool binds to "c:libtidy>tidyOptGetBool"

  foreign handler c_tidyOptSetBool (in pDoc as TidyDoc, in pOptionId as CInt, in pVal as CBool) \
        returns CBool binds to "c:libtidy>tidyOptSetBool"

  // 0 = OK, 1 = Warnings, 2 = Errors
  foreign handler c_tidyParseString (in pDoc as TidyDoc, in pString as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidyParseString"

  foreign handler c_tidyCleanAndRepair (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyCleanAndRepair"

  foreign handler c_tidyRunDiagnostics (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyRunDiagnostics"

  foreign handler c_tidySaveString (in pDoc as TidyDoc, in rBuffer as optional Pointer, inout xBufferLength as CUInt) \
        returns CInt binds to "c:libtidy>tidySaveString"

  foreign handler c_tidyOptGetIdForName (in pOptName as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidyOptGetIdForName"


  public handler tidyReleaseDate() returns String
    variable tRetStr as String
    unsafe
      if MCStringCreateWithCString(c_tidyReleaseDate(), tRetStr) then
        return tRetStr
      else
        return ""
      end if
    end unsafe
  end handler


  public handler tidyLibraryVersion() returns String
    variable tRetStr as String
    unsafe
      if MCStringCreateWithCString(c_tidyLibraryVersion(), tRetStr) then
        return tRetStr
      else
        return ""
      end if
    end unsafe
  end handler


  public handler tidyPlatform() returns String
    variable tRetStr as String
    unsafe
      if MCStringCreateWithCString(c_tidyPlatform(), tRetStr) then
        return tRetStr
      else
        return ""
      end if
    end unsafe
  end handler


  /**
  Summary: Converts HTML to XHTML.

  Parameters:
  pHTML: UTF-8 HTML.
  pOptionsA: An array of settings to apply before converting the string.
  rError: Contains any error mesages.
  rWarningCount: The number of warnings generated.
  rErrorCount: The number of errors generated.

  Returns: Repaired HTML/XHTML as a Livecode encoded string or empty if rRrror is not empty.
  */
  public handler tidyHTML(in pHTML as Data, in pOptionsA as Array, out rError, out rWarningCount, out rErrorCount) returns String
    variable tDoc as optional TidyDoc
    variable tForceOutput as Boolean
    variable tSaveAnyway as Boolean
    variable tResultCode as Integer
    variable tBuffer as optional Pointer
    variable tBufferLength as Integer
    variable tConvertedHTML as String

    put -1 into tResultCode
    put "" into rError

    put "TidyForceOutput" is among the keys of pOptionsA and pOptionsA["TidyForceOutput"] is true into tForceOutput
    put false into tSaveAnyway

    unsafe
      if rError is "" then
        put c_tidyCreate() into tDoc

        // TODO: Set up error buffer
      end if

      if rError is "" then
        if not c_tidyOptSetInt(tDoc, kOptions["TidyCharEncoding"], kEncodings["TidyEncUtf8"]) then
          put "unable to set encoding to UTF-8" into rError
        end if
      end if

      // Apply options and Parse
      if rError is "" then
        _applyOptionsToTidyDoc(tDoc, pOptionsA)
        put the result into rError
      end if

      // Clean
      if rError is "" then
        put c_tidyParseString(tDoc, MCDataGetBytePtr(pHTML)) into tResultCode

        if tResultCode >= 0 then
          put c_tidyCleanAndRepair(tDoc) into tResultCode
        end if

        // Diagnostics
        if tResultCode >= 0 then
          put c_tidyRunDiagnostics(tDoc) into tResultCode
          put c_tidyWarningCount(tDoc) into rWarningCount
          put c_tidyConfigErrorCount(tDoc) into rErrorCount
        end if

        if tResultCode > 1 then
          // TODO: Report errors in parsing the document.
          log "error"
          put tForceOutput into tSaveAnyway
        end if
      end if

      // Move converted doc into a LiveCode String.
      // Get the buffer length
      if rError is "" or tSaveAnyway then
        put 0 into tBufferLength
        put c_tidySaveString(tDoc, nothing, tBufferLength) into tResultCode
        if tResultCode is ENOMEM then
          if not MCMemoryAllocate(tBufferLength, tBuffer) then
            put "unable to allocate memory for buffer" into rError
          else
            put c_tidySaveString(tDoc, tBuffer, tBufferLength) into tResultCode
            if tResultCode is ENOMEM then
              put "ENOMEM error" into rError
            end if
          end if
        end if

        if rError is "" and tBufferLength > 0 then
          if not MCStringCreateWithBytes(tBuffer, tBufferLength, kMCStringEncodingUTF8, false, tConvertedHTML) then
            put "unable to convert buffer to string" into rError
          end if
        end if
      end if

      if tBuffer is not nothing then
        MCMemoryDeallocate(tBuffer)
      end if

      if tDoc is not nothing then
        c_tidyRelease(tDoc)
      end if

      return tConvertedHTML
    end unsafe

  end handler

  /**
  Summary: Applies an array of settings to a TinyDoc.

  Parameters:
  pTidyDoc: The TidyDoc to apply the settings to.
  pOptionsA: An array. Keys are the properties to set and match any boolean keys in `kOptions` array. Values are the values to assign to the property.

  Description:
  This handler is currently limited to options that are set with `tidyOptSetBool`.

  Returns: Error message
  */
  private handler _applyOptionsToTidyDoc(in pTidyDoc as TidyDoc, in pOptionsA as Array) returns String
    variable tError as String
    variable tSetting as String
    variable tBoolean as Boolean

    unsafe

      repeat for each key tSetting in pOptionsA
        put pOptionsA[tSetting] is "true" into tBoolean
        if not c_tidyOptSetBool(pTidyDoc, kOptions[tSetting], tBoolean) then
          put "unable to set" && tSetting into tError
          exit repeat
        end if
      end repeat

    end unsafe

    return tError
  end handler

end library
