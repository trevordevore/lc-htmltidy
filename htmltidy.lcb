library community.livecode.trevordevor.htmltidy

  use com.livecode.engine
  use com.livecode.foreign

  metadata title is "HTML Tidy"
  metadata author is "Trevor DeVore"
  metadata version is "0.0.1"

  public type TidyDoc is Pointer
  -- ctmbstr: https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L607
  public type Ctmbstr is Pointer
  -- tmbstr: https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L607
  public type Tmbchar is Pointer

  constant ENOMEM is -12

  constant kOptions is { \
    "TidyUnknownOption" : 0, \
    "TidyAccessibilityCheckLevel" : 1, \
    "TidyAltText" : 2, \
    "TidyAnchorAsName" : 3, \
    "TidyAsciiChars" : 4, \
    "TidyBlockTags" : 5, \
    "TidyBodyOnly" : 6, \
    "TidyBreakBeforeBR" : 7, \
    "TidyCharEncoding" : 8, \
    "TidyCoerceEndTags" : 9, \
    "TidyCSSPrefix" : 10, \
    "TidyCustomTags" : 11, \
    "TidyDecorateInferredUL" : 12, \
    "TidyDoctype" : 13, \
    "TidyDoctypeMode" : 14, \
    "TidyDropEmptyElems" : 15, \
    "TidyDropEmptyParas" : 16, \
    "TidyDropPropAttrs" : 17, \
    "TidyDuplicateAttrs" : 18, \
    "TidyEmacs" : 19, \
    "TidyEmacsFile" : 20, \
    "TidyEmptyTags" : 21, \
    "TidyEncloseBlockText" : 22, \
    "TidyEncloseBodyText" : 23, \
    "TidyErrFile" : 24, \
    "TidyEscapeCdata" : 25, \
    "TidyEscapeScripts" : 26, \
    "TidyFixBackslash" : 27, \
    "TidyFixComments" : 28, \
    "TidyFixUri" : 29, \
    "TidyForceOutput" : 30, \
    "TidyGDocClean" : 31, \
    "TidyHideComments" : 32, \
    "TidyHtmlOut" : 33, \
    "TidyInCharEncoding" : 34, \
    "TidyIndentAttributes" : 35, \
    "TidyIndentCdata" : 36, \
    "TidyIndentContent" : 37, \
    "TidyIndentSpaces" : 38, \
    "TidyInlineTags" : 39, \
    "TidyJoinClasses" : 40, \
    "TidyJoinStyles" : 41, \
    "TidyKeepFileTimes" : 42, \
    "TidyKeepTabs" : 43, \
    "TidyLiteralAttribs" : 44, \
    "TidyLogicalEmphasis" : 45, \
    "TidyLowerLiterals" : 46, \
    "TidyMakeBare" : 47, \
    "TidyMakeClean" : 48, \
    "TidyMark" : 49, \
    "TidyMergeDivs" : 50, \
    "TidyMergeEmphasis" : 51, \
    "TidyMergeSpans" : 52, \
    "TidyMetaCharset" : 53, \
    "TidyMuteReports" : 54, \
    "TidyMuteShow" : 55, \
    "TidyNCR" : 56, \
    "TidyNewline" : 57, \
    "TidyNumEntities" : 58, \
    "TidyOmitOptionalTags" : 59, \
    "TidyOutCharEncoding" : 60, \
    "TidyOutFile" : 61, \
    "TidyOutputBOM" : 62, \
    "TidyPPrintTabs" : 63, \
    "TidyPreserveEntities" : 64, \
    "TidyPreTags" : 65, \
    "TidyPriorityAttributes" : 66, \
    "TidyPunctWrap" : 67, \
    "TidyQuiet" : 68, \
    "TidyQuoteAmpersand" : 69, \
    "TidyQuoteMarks" : 70, \
    "TidyQuoteNbsp" : 71, \
    "TidyReplaceColor" : 72, \
    "TidyShowErrors" : 73, \
    "TidyShowFilename" : 74, \
    "TidyShowInfo" : 75, \
    "TidyShowMarkup" : 76, \
    "TidyShowMetaChange" : 77, \
    "TidyShowWarnings" : 78, \
    "TidySkipNested" : 79, \
    "TidySortAttributes" : 80, \
    "TidyStrictTagsAttr" : 81, \
    "TidyStyleTags" : 82, \
    "TidyTabSize" : 83, \
    "TidyUpperCaseAttrs" : 84, \
    "TidyUpperCaseTags" : 85, \
    "TidyUseCustomTags" : 86, \
    "TidyVertSpace" : 87, \
    "TidyWarnPropAttrs" : 88, \
    "TidyWord2000" : 89, \
    "TidyWrapAsp" : 90, \
    "TidyWrapAttVals" : 91, \
    "TidyWrapJste" : 92, \
    "TidyWrapLen" : 93, \
    "TidyWrapPhp" : 94, \
    "TidyWrapScriptlets" : 95, \
    "TidyWrapSection" : 96, \
    "TidyWriteBack" : 97, \
    "TidyXhtmlOut" : 98, \
    "TidyXmlDecl" : 99, \
    "TidyXmlOut" : 100, \
    "TidyXmlPIs" : 101, \
    "TidyXmlSpace" : 102, \
    "TidyXmlTags" : 103 \
  }

  foreign handler MCDataCreateMutable( in pInitialCapacity as Integer, inout pData as Data) returns CBool binds to "<builtin>"
  foreign handler MCDataGetBytePtr( in pData as Data ) returns Pointer binds to "<builtin>"
  foreign handler MCStringCreateWithCString(in pString as Pointer, out rString as String) returns CBool binds to "<builtin>"
  foreign handler MCStringConvertToCString(in pString as String, out rCString as Pointer) returns CBool binds to "<builtin>"

  foreign handler c_tidyReleaseDate () \
        returns Ctmbstr binds to "c:libtidy>tidyReleaseDate"

  foreign handler c_tidyLibraryVersion () \
        returns Ctmbstr binds to "c:libtidy>tidyLibraryVersion"

  foreign handler c_tidyPlatform () \
        returns Ctmbstr binds to "c:libtidy>tidyPlatform"

  foreign handler c_tidyCreate () \
        returns TidyDoc binds to "c:libtidy>tidyCreate"

  foreign handler c_tidyRelease (in pDoc as TidyDoc) \
        returns nothing binds to "c:libtidy>tidyRelease"

  foreign handler c_tidyStatus (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyStatus"

  foreign handler c_tidyDetectedHtmlVersion (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyDetectedHtmlVersion"

  foreign handler c_tidyDetectedXhtml (in pDoc as TidyDoc) \
        returns CBool binds to "c:libtidy>tidyDetectedXhtml"

  foreign handler c_tidyDetectedGenericXml (in pDoc as TidyDoc) \
        returns CBool binds to "c:libtidy>tidyDetectedGenericXml"

  foreign handler c_tidyErrorCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyErrorCount"

  foreign handler c_tidyWarningCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyWarningCount"

  foreign handler c_tidyAccessWarningCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyAccessWarningCount"

  foreign handler c_tidyConfigErrorCount (in pDoc as TidyDoc) \
        returns CUInt binds to "c:libtidy>tidyConfigErrorCount"

  foreign handler c_tidyOptGetBool () \
        returns CBool binds to "c:libtidy>tidyOptGetBool"

  foreign handler c_tidyOptSetBool (in pDoc as TidyDoc, in pOptionId as CInt, in pVal as CBool) \
        returns CBool binds to "c:libtidy>tidyOptSetBool"

  // 0 = OK, 1 = Warnings, 2 = Errors
  foreign handler c_tidyParseString (in pDoc as TidyDoc, in pString as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidyParseString"

  foreign handler c_tidyCleanAndRepair (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyCleanAndRepair"

  foreign handler c_tidyRunDiagnostics (in pDoc as TidyDoc) \
        returns CInt binds to "c:libtidy>tidyRunDiagnostics"

  foreign handler c_tidySaveString (in pDoc as TidyDoc, in rBuffer as Pointer, out rBufferLength as CUInt) \
        returns CInt binds to "c:libtidy>tidySaveString"

  foreign handler c_tidyOptGetIdForName (in pOptName as Ctmbstr) \
        returns CInt binds to "c:libtidy>tidyOptGetIdForName"


  public handler tidyReleaseDate() returns String
    variable tRetStr as String
    unsafe
      if MCStringCreateWithCString(c_tidyReleaseDate(), tRetStr) then
        return tRetStr
      else
        return ""
      end if
    end unsafe
  end handler


  public handler tidyLibraryVersion() returns String
    variable tRetStr as String
    unsafe
      if MCStringCreateWithCString(c_tidyLibraryVersion(), tRetStr) then
        return tRetStr
      else
        return ""
      end if
    end unsafe
  end handler


  public handler tidyPlatform() returns String
    variable tRetStr as String
    unsafe
      if MCStringCreateWithCString(c_tidyPlatform(), tRetStr) then
        return tRetStr
      else
        return ""
      end if
    end unsafe
  end handler


  public handler tidyHTMLToXHTML(in pHTML as String, out rError) returns String
    variable tDoc as TidyDoc
    variable tCStr as Pointer
    variable tHTML as Pointer
    variable tResultCode as Integer
    variable tBuffer as Data
    variable tBufferLength as Integer

    unsafe
      if not MCStringConvertToCString(pHTML, tHTML) then
        put "failed to convert HTML to C String" into rError
        return ""
      end if

      put c_tidyCreate() into tDoc

      if not c_tidyOptSetBool(tDoc, kOptions["TidyXhtmlOut"], true) then
        put "unable to set XHTMLOut" into rError
        c_tidyRelease(tDoc)
        return ""
      end if

      // Parse
      put c_tidyParseString(tDoc, tHTML) into tResultCode
      log "tidyParseString tResultCode:" && tResultCode formatted as string

      // Clean
      if tResultCode >= 0 then
        put c_tidyCleanAndRepair(tDoc) into tResultCode
        log "c_tidyCleanAndRepair:" && tResultCode formatted as string
      end if

      // Diagnostics
      if tResultCode >= 0 then
        put c_tidyRunDiagnostics(tDoc) into tResultCode
        log "c_tidyRunDiagnostics:" && tResultCode formatted as string
      end if

      if tResultCode > 1 then
        // Error in parsing document so turn on `TidyForceOutput` here.
        if not c_tidyOptSetBool(tDoc, kOptions["TidyForceOutput"], true) then
          put "unable to set force output" into rError
          c_tidyRelease(tDoc)
          return ""
        end if
      end if

      // Move converted doc into a LiveCode String.
      // Start by getting buffer length
      put c_tidySaveString(tDoc, MCDataGetBytePtr(tBuffer), tBufferLength) into tResultCode
      if tResultCode is ENOMEM then
        log "allocating Data"

        if not MCMemoryAllocate(tBufferLength, MCDataGetBytePtr(tBuffer)) then
          put "unable to allocate memory for buffer" into rError
          c_tidyRelease(tDoc)
          return ""
        else
          log ["Number of bytes:", the number of bytes in tBuffer]
        end if

        -- variable tCounter as Number

        -- // QUESTION: Is this the most efficient way to allocate a buffer in LiveCode for tidySavingString?
        -- repeat with tCounter from 1 up to tBufferLength
        --   put the byte with code 0 after tBuffer
        -- end repeat

        put c_tidySaveString(tDoc, MCDataGetBytePtr(tBuffer), tBufferLength) into tResultCode
      end if
      log "tidySaveString tResultCode:" && tResultCode formatted as string
      log "tidySaveString tBufferLength:" && tBufferLength formatted as string

      // TODO: convert tBuffer to a String. Method for
      if tResultCode is ENOMEM then
        put "ENOMEM error" into rError
        c_tidyRelease(tDoc)
        return ""
      else
        put tmbcharToString(tBuffer) into tConvertedHTML
      end if

      c_tidyRelease(tDoc)
      return tConvertedHTML
    end unsafe

  end handler


  public handler tidyTest(out rError) returns String
    variable tCStr as Pointer

    unsafe
      -- Attempting to create a Ctmbstr from a LiveCode string
      -- ctmbstr: https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L607
      if not MCStringConvertToCString("TidyUnknownOption", tCStr) then
        put "unable to create option string" into rError
        return ""
      end if

      -- The next handler is logging `104` which is N_TIDY_OPTIONS (error)
      -- Appears that tCStr is not the right format.
      log c_tidyOptGetIdForName(tCStr)
    end unsafe

    return ""
  end handler


  private handler tmbcharToString(in pTmbChar as Data) returns String
    variable tString as String
    variable tCode as Number
    variable tCharByte as Data

    repeat for each byte tCharByte in pTmbChar
      put the code of tCharByte into tCode
      put the char with code tCode after tString
    end repeat
    return tString
  end handler

end library
